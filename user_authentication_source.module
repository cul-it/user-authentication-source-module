<?php
// $Id$
/**
 * @file
 * modify users authentication source via VBO
 *
 */

function user_authentication_source_action_info() {
  return array(
    'user_authentication_source_action' => array(
      'type' => 'user',
      'label' => t('Change authentication source for a user'),
      'configurable' => TRUE,
      'triggers' => array('any'),
    ),
  );
}

function user_authentication_source_action_form($options) {
  $form = array();
  $form['hero'] = array(
    '#type' => 'select',
    '#title' => t('Choose your authentication source'),
    '#options' => array(
      'simplesamlphp_auth' => t('SimpleSAML'),
      'culauth' => t('CUWebAuth'),
    ),
    '#default_value' => !empty($options['hero']) ? $options['hero'] : '',
  );

  return $form;
}

function user_authentication_source_action_submit($form, $form_state) {
  return array(
    'authentication_source' => $form_state['values']['hero'],
    );
}

function user_authentication_source_action(&$user, $context) {
  $source = $context['authentication_source'];
  $name = $user->name;

  $userinfo = array();

  // delete existing authmaps
  $authmaps = user_get_authmaps($name);
  if (is_array($authmaps)) {
    $keys = array_keys($authmaps);
    foreach ($keys as $key) {
      $userinfo["authname_$key"] = NULL;
    }
  }

  // new authmap
  $userinfo["authname_$source"] = $name;

  user_set_authmaps($user, $userinfo);

  watchdog('user', 'Reset user authentication source: %name %email to %source.', array('%name' => $user->name, '%email' => '<' . $user->mail . '>', '%source' => $source), WATCHDOG_NOTICE);
}
